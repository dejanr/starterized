#!/usr/bin/env node

'use strict';

var program = require('commander');
var path = require('path');

var initialize = require('../commands/initialize').action;
var serve = require('../commands/serve').action;
var layout = require('../commands/layout').action;
var page = require('../commands/page').action;
var partial = require('../commands/partial').action;

program.usage('[options] [command] [arguments]');

program.option('-v, --verbose', 'show verbose messages');
program.option('-f, --force', 'force command execution');
program.option('-c, --cwd [cwd]', 'execute inside specified working dir');

program
  .command('init [dir]')
  .description('initialize new project inside [dir]. Defaults to public.')
  .action(function(dir) {
    var cwd = program.cwd ? path.resolve(program.cwd) : undefined;
    initialize(cwd, dir, {
      verbose: program.verbose,
      force: program.force
    });
  });

program
  .command('serve')
  .description('serve markup files and livereload assets')
  .action(serve);

program
  .command('layout <name>')
  .description('generate markup layout with <name>')
  .action(layout);

program
  .command('page <name> [layout]')
  .description('generate markup page with <name> which extends [layout]')
  .action(page);

program
  .command('partial <name>')
  .description('generate markup partial with <name> which extends [parent]')
  .action(partial);

program.parse(process.argv);

if (process.argv.length === 2) {
  program.help();
}
